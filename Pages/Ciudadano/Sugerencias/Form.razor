@page "/panel_ciudadano/{id:int}/{token}/sugerencias/form"
@page "/panel_ciudadano/{id:int}/{token}/sugerencias/{sugerencia_id:int}"

@using taanbus.Data.Models
@using System.Net.Http
@using System.Net.Http.Json
@inject HttpClient http
@inject NavigationManager nav
@layout CiudadanoLayout

@if (Sugerencia_Id == null)
{
    <PageTitle>Presentar sugerencia</PageTitle>

    <div class="container w-50 mb-2">
        <h3 class="text-center">Presentar sugerencia</h3>
    </div>

    <hr>

    <EditForm class="container_form container w-50" Model="@sugerencia">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-floating">
            <InputTextArea @bind-Value="@sugerencia.Descripcion" class="form-control" placeholder="descripcion"
            id="descripcion" style="height: 200px"></InputTextArea>
            <label for="descripcion">Descripción</label>
        </div>

        <div class="row g-2 ms-1">
            <button @onclick="Save" type="submit" class="btn btn-success mt-4 me-4 col-auto">Guardar</button>
        </div>
    </EditForm>
}
else
{
    <PageTitle>Detalles sugerencia</PageTitle>

    <div class="container w-50 mb-2">
        <h3 class="text-center display-6">Detalles sugerencia</h3>
    </div>

    <hr>

    <EditForm class="container_form container" Model="@sugerencia">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-floating">
            <InputTextArea @bind-Value="@sugerencia.Descripcion" class="form-control" placeholder="descripcion"
            id="descripcion" style="height: 200px"></InputTextArea>
            <label for="descripcion">Descripción</label>
        </div>

        <div class="row g-2 ms-1">
            <button @onclick="Update" type="submit" class="btn btn-success mt-4 me-4 col-auto">Actualizar</button>
            <button @onclick="Delete" type="submit" class="btn btn-danger mt-4 me-4 col-auto">Eliminar</button>
        </div>
    </EditForm>
}


@code {
    [Parameter] public int? Id { get; set; }
    [Parameter] public string? Token { get; set; }
    [Parameter] public int? Sugerencia_Id { get; set; }
    SugerenciaModel sugerencia = new SugerenciaModel();

    protected override async Task OnInitializedAsync()
    {
        if (Sugerencia_Id != null)
        {
            sugerencia = await http.GetFromJsonAsync<SugerenciaModel>($"api/sugerencia/{Sugerencia_Id}");
        }
    }

    private async Task Save()
    {
        if (!String.IsNullOrEmpty(sugerencia.Descripcion))
        {
            sugerencia.UserId = Id;
            try
            {
                await http.PostAsJsonAsync<SugerenciaModel>("api/sugerencia", sugerencia);
                nav.NavigateTo($"panel_ciudadano/{Id}/{Token}/sugerencias");
            }
            catch (Exception e)
            {
                throw new Exception(e.Message);
            }
        }
    }

    private async Task Update()
    {
        if (!String.IsNullOrEmpty(sugerencia.Descripcion))
        {
            try
            {
                await http.PutAsJsonAsync<SugerenciaModel>($"api/sugerencia/{Sugerencia_Id}", sugerencia);
                nav.NavigateTo($"panel_ciudadano/{Id}/{Token}/sugerencias");
            }
            catch (Exception e)
            {
                throw new Exception(e.Message);
            }
        }
    }

    private void Delete()
    {
        nav.NavigateTo($"/panel_ciudadano/{Id}/{Token}/sugerencias/{Sugerencia_Id}/delete");
    }
}