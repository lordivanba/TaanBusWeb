@page "/sugerencia/form"
@page "/sugerencia/{id:int}"

@using taanbus.Data.Models
@using System.Net.Http
@using System.Net.Http.Json
@inject HttpClient http
@inject NavigationManager nav

@if (Id == null)
{
    <PageTitle>Presentar sugerencia</PageTitle>

    <div class="container w-50 mb-2">
        <h3 class="text-center">Presentar sugerencia</h3>
    </div>

    <hr>

    <EditForm class="container_form container w-50" Model="@sugerencia">

        <div class="form-floating">
            <InputTextArea @bind-Value="@sugerencia.Descripcion" class="form-control" placeholder="descripcion"
            id="descripcion" style="height: 200px"></InputTextArea>
            <label for="descripcion">Descripción</label>
        </div>

        <div class="row g-2 ms-1">
            <button @onclick="Save" type="submit" class="btn btn-success mt-4 me-4 col-auto">Guardar</button>
        </div>
    </EditForm>
}
else
{
    <PageTitle>Detalles sugerencia</PageTitle>

    <div class="container w-50 mb-2">
        <h4 class="text-center display-6">Detalles sugerencia</h4>
    </div>

    <hr>

    <EditForm class="container_form container" Model="@sugerencia">

        <div class="form-floating">
            <InputTextArea @bind-Value="@sugerencia.Descripcion" class="form-control" placeholder="descripcion"
            id="descripcion" style="height: 200px"></InputTextArea>
            <label for="descripcion">Descripción</label>
        </div>

        <div class="row g-2 ms-1">
            <button @onclick="Update" type="submit" class="btn btn-success mt-4 me-4 col-auto">Actualizar</button>
            <button @onclick="Delete" type="submit" class="btn btn-danger mt-4 me-4 col-auto">Eliminar</button>
        </div>
    </EditForm>
}


@code {
    [Parameter]
    public int? Id { get; set; }
    SugerenciaModel sugerencia = new SugerenciaModel();

    protected override async Task OnInitializedAsync()
    {
        if (Id != null)
        {
            sugerencia = await http.GetFromJsonAsync<SugerenciaModel>($"api/sugerencia/{Id}");
        }
    }

    private async Task Save()
    {
        try
        {
            await http.PostAsJsonAsync<SugerenciaModel>("api/sugerencia", sugerencia);
            nav.NavigateTo("/sugerencias");
        }
        catch (Exception e)
        {
            throw new Exception(e.Message);
        }
    }

    private async Task Update()
    {
        try
        {
            await http.PutAsJsonAsync<SugerenciaModel>($"api/sugerencia/{Id}", sugerencia);
            nav.NavigateTo("/sugerencias");
        }
        catch (Exception e)
        {
            throw new Exception(e.Message);
        }
    }

    private void Delete()
    {
        nav.NavigateTo($"/sugerencia/delete/{Id}");
    }
}